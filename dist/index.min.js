var Parser=function(t){"use strict";const{min:s,max:e}=Math;class r{constructor(t){this.feed=t,this.feedSize=t.length,this.cursor=0}peek(t){const{cursor:e}=this;return this.feed.substring(e,s(e+t,this.feedSize))}eat(t){const e=t.length;return this.peek(e)===t&&(this.cursor=s(this.cursor+e,this.feedSize),!0)}revert(t){this.cursor=e(this.cursor-t,0)}get size(){return this.feedSize-this.cursor}}class n{parse(t){}}const i=(t,s)=>{for(let e=s.length-1;e>=0;e-=1){const r=s[e];r instanceof Array&&i(t,r),"string"==typeof r&&t.revert(r.length)}};return t.Feed=r,t.Matcher=n,t.CharSet=class extends n{constructor(t){super(),this.value=t}parse(t){let s;if(t instanceof r){const{value:e}=this;t.eat(e)&&(s=e)}return s}},t.Range=class extends n{constructor(t,s){super(),this.min="string"==typeof t?t:"\0",this.max="string"==typeof s?s:"Ã¿"}parse(t){if(t instanceof r){const s=t.peek(1);if(this.min<=s&&s<=this.max)return t.eat(s),s}}},t.Quantifier=class extends n{constructor(t,s,e){super(),t instanceof n&&(this.matcher=t,this.min="number"==typeof s?s:0,this.max="number"==typeof e?e:void 0)}parse(t){if(t instanceof r){const{matcher:s,min:e,max:r}=this,o="number"==typeof r;if(s instanceof n){const n=[];let c=s.parse(t),a=0;for(;void 0!==c&&(n.push(c),a+=1,!(o&&a>r));)c=s.parse(t);if(a>=e)return n;i(t,n)}}}},t.Sequence=class extends n{constructor(t){super(),this.matchers=t}parse(t){if(t instanceof r){const s=[];for(const e of this.matchers){const r=e.parse(t),n=void 0===r;if(n)return void i(t,s);n||s.push(r)}return s}}},t.Alternation=class extends n{constructor(t){super(),this.matchers=t}parse(t){if(t instanceof r)for(const s of this.matchers){const e=s.parse(t);if(void 0!==e)return e}}},t}({});